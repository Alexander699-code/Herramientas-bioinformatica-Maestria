{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Alexander699-code/Herramientas-bioinformatica-Maestria/blob/main/Copia_de_2_gen_db.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tbt05WwXlJs5",
        "outputId": "d4516ee4-e8e2-4ae3-f3c8-67caf781f867"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting biopython\n",
            "  Downloading biopython-1.85-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (13 kB)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.12/dist-packages (from biopython) (2.0.2)\n",
            "Downloading biopython-1.85-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.3 MB)\n",
            "\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m3.3/3.3 MB\u001b[0m \u001b[31m35.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: biopython\n",
            "Successfully installed biopython-1.85\n"
          ]
        }
      ],
      "source": [
        "# üìò Instalaci√≥n de Biopython\n",
        "!pip install biopython\n",
        "\n",
        "# üìö Importar librer√≠as necesarias\n",
        "from Bio import Entrez, SeqIO\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# üìß Configurar tu correo electr√≥nico (requerido por NCBI)\n",
        "Entrez.email = \"palomaresalex6@gmail.com\"  # Reemplaza con tu correo\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# üîç Paso 1: Obtener la secuencia del gen Amy23 desde NCBI\n",
        "# M79328 es el ID RefSeq del ARN mensajero de Amy23\n",
        "handle = Entrez.efetch(db=\"nucleotide\", id=\"M79328\", rettype=\"fasta\", retmode=\"text\")\n",
        "record = SeqIO.read(handle, \"fasta\")\n",
        "handle.close()\n",
        "\n",
        "# üíæ Paso 2: Guardar la secuencia en formato FASTA\n",
        "with open(\"Amy23_sequence.fasta\", \"w\") as output_handle:\n",
        "    SeqIO.write(record, output_handle, \"fasta\")\n",
        "\n",
        "# üìÇ Paso 3: Leer el archivo FASTA\n",
        "parsed_record = SeqIO.read(\"Amy23_sequence.fasta\", \"fasta\")\n",
        "sequence = parsed_record.seq\n"
      ],
      "metadata": {
        "id": "7mwb35dnl3gO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# üìä Paso 4: Calcular estad√≠sticas b√°sicas\n",
        "sequence_length = len(sequence)\n",
        "gc_content = 100 * float(sequence.count(\"G\") + sequence.count(\"C\")) / sequence_length\n",
        "\n",
        "# üñ®Ô∏è Paso 5: Mostrar estad√≠sticas\n",
        "print(f\"üß¨ ID de la secuencia: {parsed_record.id}\")\n",
        "print(f\"üìè Longitud de la secuencia: {sequence_length} pares de bases\")\n",
        "print(f\"üß™ Contenido GC: {gc_content:.2f}%\")\n",
        "\n",
        "# üìà Paso 6: Graficar el contenido GC\n",
        "plt.figure(figsize=(6, 4))\n",
        "plt.bar([\"Contenido GC\"], [gc_content], color=\"black\")\n",
        "plt.ylabel(\"Porcentaje\")\n",
        "plt.title(\"üß¨ Contenido GC del gen Amy25\")\n",
        "plt.ylim(0, 100)\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 494
        },
        "id": "Y_ZT0myjl8tQ",
        "outputId": "139891eb-143a-4c2b-b83f-7b1a62af8c17"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "üß¨ ID de la secuencia: M79328.1\n",
            "üìè Longitud de la secuencia: 1962 pares de bases\n",
            "üß™ Contenido GC: 42.05%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-3653819876.py:17: UserWarning: Glyph 129516 (\\N{DNA DOUBLE HELIX}) missing from font(s) DejaVu Sans.\n",
            "  plt.tight_layout()\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
